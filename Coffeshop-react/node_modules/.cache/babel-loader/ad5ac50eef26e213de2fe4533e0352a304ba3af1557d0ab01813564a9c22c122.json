{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prisc\\\\coffeeshop-react\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tabs, Tab, Container, Button } from 'react-bootstrap';\nimport UserTable from './UserTable';\nimport ProductTable from './ProductTable';\nimport ProductForm from './ProductForm';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  // Hook para controlar la vista: 'list' (mostrar tabla) o 'form' (mostrar formulario)\n  const [view, setView] = useState('list');\n  // Hook para guardar el producto que se está editando\n  const [productToEdit, setProductToEdit] = useState(null);\n  // Hook para forzar la recarga de las tablas después de guardar/editar\n  const [refreshKey, setRefreshKey] = useState(0);\n\n  // Función que se llama al hacer clic en \"Editar\" en la tabla\n  const handleEditProduct = product => {\n    setProductToEdit(product); // Carga los datos en el estado\n    setView('form'); // Cambia la vista a formulario\n  };\n\n  // Función que regresa a la vista de lista y actualiza la tabla\n  const handleFormSubmit = () => {\n    setProductToEdit(null); // Limpia el producto de edición\n    setView('list'); // Regresa a la lista\n    setRefreshKey(prev => prev + 1); // Incrementa la clave para forzar la recarga de la tabla\n  };\n\n  // Renderiza la lista o el formulario según el estado 'view'\n  const renderProductView = () => {\n    if (view === 'form') {\n      return (\n        /*#__PURE__*/\n        // Pasa los datos iniciales y la función para manejar el guardado/cancelación\n        _jsxDEV(ProductForm, {\n          initialData: productToEdit,\n          onSubmit: handleFormSubmit,\n          onCancel: handleFormSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)\n      );\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"my-3\",\n        onClick: () => {\n          setProductToEdit(null);\n          setView('form');\n        },\n        children: \"+ Crear Nuevo Producto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProductTable, {\n        onEdit: handleEditProduct,\n        refreshKey: refreshKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Panel de Administraci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      defaultActiveKey: \"productos\",\n      id: \"admin-tabs\",\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"productos\",\n        title: \"Gesti\\xF3n de Productos\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mt-3\",\n          children: \"Crear, Editar y Listar Productos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), renderProductView()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"usuarios\",\n        title: \"Gesti\\xF3n de Usuarios\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mt-3\",\n          children: \"Gesti\\xF3n de Clientes y Roles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(UserTable, {\n          refreshKey: refreshKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"reportes\",\n        title: \"Reportes\",\n        disabled: true,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center my-4\",\n          children: \"Vista futura: Reportes y \\xD3rdenes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminDashboard, \"FYIWVsyTI+RUJZVbPAon/8ULBVM=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","Tabs","Tab","Container","Button","UserTable","ProductTable","ProductForm","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","view","setView","productToEdit","setProductToEdit","refreshKey","setRefreshKey","handleEditProduct","product","handleFormSubmit","prev","renderProductView","initialData","onSubmit","onCancel","fileName","_jsxFileName","lineNumber","columnNumber","children","variant","className","onClick","onEdit","defaultActiveKey","id","eventKey","title","disabled","_c","$RefreshReg$"],"sources":["C:/Users/prisc/coffeeshop-react/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Tabs, Tab, Container, Button } from 'react-bootstrap';\r\nimport UserTable from './UserTable'; \r\nimport ProductTable from './ProductTable'; \r\nimport ProductForm from './ProductForm'; \r\n\r\nconst AdminDashboard = () => {\r\n    // Hook para controlar la vista: 'list' (mostrar tabla) o 'form' (mostrar formulario)\r\n    const [view, setView] = useState('list'); \r\n    // Hook para guardar el producto que se está editando\r\n    const [productToEdit, setProductToEdit] = useState(null); \r\n    // Hook para forzar la recarga de las tablas después de guardar/editar\r\n    const [refreshKey, setRefreshKey] = useState(0); \r\n\r\n    // Función que se llama al hacer clic en \"Editar\" en la tabla\r\n    const handleEditProduct = (product) => {\r\n        setProductToEdit(product); // Carga los datos en el estado\r\n        setView('form');           // Cambia la vista a formulario\r\n    };\r\n\r\n    // Función que regresa a la vista de lista y actualiza la tabla\r\n    const handleFormSubmit = () => {\r\n        setProductToEdit(null); // Limpia el producto de edición\r\n        setView('list');        // Regresa a la lista\r\n        setRefreshKey(prev => prev + 1); // Incrementa la clave para forzar la recarga de la tabla\r\n    };\r\n\r\n    // Renderiza la lista o el formulario según el estado 'view'\r\n    const renderProductView = () => {\r\n        if (view === 'form') {\r\n            return (\r\n                // Pasa los datos iniciales y la función para manejar el guardado/cancelación\r\n                <ProductForm \r\n                    initialData={productToEdit} \r\n                    onSubmit={handleFormSubmit} \r\n                    onCancel={handleFormSubmit}\r\n                />\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <Button \r\n                    variant=\"primary\" \r\n                    className=\"my-3\" \r\n                    onClick={() => { setProductToEdit(null); setView('form'); }}\r\n                >\r\n                    + Crear Nuevo Producto\r\n                </Button>\r\n                {/* ProductTable usa refreshKey para saber cuándo recargar */}\r\n                <ProductTable onEdit={handleEditProduct} refreshKey={refreshKey} />\r\n            </>\r\n        );\r\n    };\r\n    \r\n    return (\r\n        <Container className=\"my-5\">\r\n            <h1 className=\"text-center\">Panel de Administración</h1>\r\n\r\n            <Tabs defaultActiveKey=\"productos\" id=\"admin-tabs\" className=\"mb-3\">\r\n                \r\n                <Tab eventKey=\"productos\" title=\"Gestión de Productos\">\r\n                    <h3 className=\"mt-3\">Crear, Editar y Listar Productos</h3>\r\n                    {renderProductView()} \r\n                </Tab>\r\n                \r\n                <Tab eventKey=\"usuarios\" title=\"Gestión de Usuarios\">\r\n                    <h3 className=\"mt-3\">Gestión de Clientes y Roles</h3>\r\n                    {/* UserTable también necesita una clave de actualización para ver los cambios */}\r\n                    <UserTable refreshKey={refreshKey} /> \r\n                </Tab>\r\n\r\n                <Tab eventKey=\"reportes\" title=\"Reportes\" disabled>\r\n                    <p className=\"text-center my-4\">Vista futura: Reportes y Órdenes.</p>\r\n                </Tab>\r\n            </Tabs>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}