{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prisc\\\\coffeeshop-react\\\\src\\\\components\\\\UserTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button, Alert } from 'react-bootstrap';\nimport { getUsersLS } from '../data/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTable = ({\n  refreshKey\n}) => {\n  _s();\n  // Hook useState: Almacena la lista de usuarios\n  const [users, setUsers] = useState([]);\n  const loadUsers = () => {\n    setUsers(getUsersLS());\n  };\n\n  // Hook useEffect: Carga los usuarios del localStorage al montar o al actualizar\n  useEffect(() => {\n    loadUsers();\n  }, [refreshKey]); // DEPENDENCIA: Se recarga si hay un cambio en AdminDashboard\n\n  // Lógica para Eliminar un usuario (usa el RUT como ID)\n  const handleDelete = rut => {\n    if (window.confirm(`¿Está seguro de eliminar el usuario con RUT ${rut}?`)) {\n      let currentUsers = getUsersLS();\n      const updatedUsers = currentUsers.filter(user => user.rut !== rut);\n      localStorage.setItem('usuarios', JSON.stringify(updatedUsers));\n      loadUsers(); // Recarga la tabla\n    }\n  };\n\n  // NOTA: La función onEditUser y el botón 'Editar' requieren crear el componente UserForm.js\n\n  if (users.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"info\",\n      className: \"mt-4 text-center\",\n      children: \"No hay usuarios registrados en el sistema.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    responsive: true,\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"RUT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Apellido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Correo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Rol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Acciones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.rut || 'N/A'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.apellido\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.email || user.correo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.rol || 'cliente'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            size: \"sm\",\n            className: \"me-2\",\n            disabled: true,\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            size: \"sm\",\n            onClick: () => handleDelete(user.rut),\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, user.rut || index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(UserTable, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = UserTable;\nexport default UserTable;\nvar _c;\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","Alert","getUsersLS","jsxDEV","_jsxDEV","UserTable","refreshKey","_s","users","setUsers","loadUsers","handleDelete","rut","window","confirm","currentUsers","updatedUsers","filter","user","localStorage","setItem","JSON","stringify","length","variant","className","children","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","responsive","map","index","nombre","apellido","email","correo","rol","size","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/prisc/coffeeshop-react/src/components/UserTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Alert } from 'react-bootstrap';\r\nimport { getUsersLS } from '../data/data'; \r\n\r\nconst UserTable = ({ refreshKey }) => {\r\n    // Hook useState: Almacena la lista de usuarios\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const loadUsers = () => {\r\n        setUsers(getUsersLS());\r\n    };\r\n\r\n    // Hook useEffect: Carga los usuarios del localStorage al montar o al actualizar\r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, [refreshKey]); // DEPENDENCIA: Se recarga si hay un cambio en AdminDashboard\r\n\r\n    // Lógica para Eliminar un usuario (usa el RUT como ID)\r\n    const handleDelete = (rut) => {\r\n        if (window.confirm(`¿Está seguro de eliminar el usuario con RUT ${rut}?`)) {\r\n            let currentUsers = getUsersLS();\r\n            const updatedUsers = currentUsers.filter(user => user.rut !== rut);\r\n            localStorage.setItem('usuarios', JSON.stringify(updatedUsers));\r\n            loadUsers(); // Recarga la tabla\r\n        }\r\n    };\r\n    \r\n    // NOTA: La función onEditUser y el botón 'Editar' requieren crear el componente UserForm.js\r\n\r\n    if (users.length === 0) {\r\n        return <Alert variant=\"info\" className=\"mt-4 text-center\">No hay usuarios registrados en el sistema.</Alert>;\r\n    }\r\n\r\n    return (\r\n        <Table striped bordered hover responsive className=\"mt-4\">\r\n            <thead>\r\n                <tr>\r\n                    <th>RUT</th>\r\n                    <th>Nombre</th>\r\n                    <th>Apellido</th>\r\n                    <th>Correo</th>\r\n                    <th>Rol</th>\r\n                    <th>Acciones</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {users.map((user, index) => (\r\n                    <tr key={user.rut || index}>\r\n                        <td>{user.rut || 'N/A'}</td>\r\n                        <td>{user.nombre}</td>\r\n                        <td>{user.apellido}</td>\r\n                        <td>{user.email || user.correo}</td>\r\n                        <td>{user.rol || 'cliente'}</td>\r\n                        <td>\r\n                            {/* El botón de editar llamaría a una función 'onEditUser' */}\r\n                            <Button variant=\"warning\" size=\"sm\" className=\"me-2\" disabled>Editar</Button> \r\n                            <Button variant=\"danger\" size=\"sm\" onClick={() => handleDelete(user.rut)}>Eliminar</Button>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n};\r\n\r\nexport default UserTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}