{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prisc\\\\coffeeshop-react\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tabs, Tab, Container, Button } from 'react-bootstrap';\nimport UserTable from './UserTable';\nimport ProductTable from './ProductTable';\nimport ProductForm from './ProductForm';\n// NOTA: Asumimos que tienes un UserForm.js (o lo crearás)\nimport UserForm from './UserForm';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  // 1. Hook principal: Controla la recarga de las tablas\n  const [refreshKey, setRefreshKey] = useState(0);\n  const [view, setView] = useState('list');\n  const [productToEdit, setProductToEdit] = useState(null);\n  const [userToEdit, setUserToEdit] = useState(null);\n\n  // Función que incrementa la clave para forzar la recarga de todas las tablas\n  const forceRefresh = () => {\n    setRefreshKey(prev => prev + 1);\n  };\n\n  // --- MANEJADORES DE ENVÍO DE FORMULARIO ---\n  const handleProductSubmit = () => {\n    setProductToEdit(null);\n    setView('list');\n    forceRefresh(); // << FORZAR RECARGA DESPUÉS DE GUARDAR PRODUCTO\n  };\n  const handleUserSubmit = () => {\n    setUserToEdit(null);\n    setView('list');\n    forceRefresh(); // << FORZAR RECARGA DESPUÉS DE GUARDAR USUARIO\n  };\n\n  // --- MANEJADORES DE VISTA DE PRODUCTO ---\n  const handleEditProduct = product => {\n    setProductToEdit(product);\n    setView('product-form');\n  };\n  const renderProductView = () => {\n    if (view === 'product-form') {\n      return /*#__PURE__*/_jsxDEV(ProductForm, {\n        initialData: productToEdit,\n        onSubmit: handleProductSubmit,\n        onCancel: () => setView('list')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"my-3\",\n        onClick: () => {\n          setProductToEdit(null);\n          setView('product-form');\n        },\n        children: \"+ Crear Nuevo Producto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProductTable, {\n        onEdit: handleEditProduct,\n        refreshKey: refreshKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  // --- MANEJADORES DE VISTA DE USUARIO ---\n  const handleEditUser = user => {\n    setUserToEdit(user);\n    setView('user-form');\n  };\n  const renderUserView = () => {\n    if (view === 'user-form') {\n      return /*#__PURE__*/_jsxDEV(UserForm, {\n        initialData: userToEdit,\n        onSubmit: handleUserSubmit,\n        onCancel: () => setView('list')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        className: \"my-3\",\n        onClick: () => {\n          setUserToEdit(null);\n          setView('user-form');\n        },\n        children: \"+ Crear Nuevo Usuario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UserTable, {\n        onEdit: handleEditUser,\n        refreshKey: refreshKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Panel de Administraci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      defaultActiveKey: \"usuarios\",\n      id: \"admin-tabs\",\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"productos\",\n        title: \"Gesti\\xF3n de Productos\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mt-3\",\n          children: \"Crear, Editar y Listar Productos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), renderProductView()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"usuarios\",\n        title: \"Gesti\\xF3n de Usuarios\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mt-3\",\n          children: \"Gesti\\xF3n de Clientes y Roles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), renderUserView()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"reportes\",\n        title: \"Reportes\",\n        disabled: true,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center my-4\",\n          children: \"Vista futura.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminDashboard, \"ypHvjvtCAVrjeZDMyxZ9IS+GWno=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","Tabs","Tab","Container","Button","UserTable","ProductTable","ProductForm","UserForm","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","refreshKey","setRefreshKey","view","setView","productToEdit","setProductToEdit","userToEdit","setUserToEdit","forceRefresh","prev","handleProductSubmit","handleUserSubmit","handleEditProduct","product","renderProductView","initialData","onSubmit","onCancel","fileName","_jsxFileName","lineNumber","columnNumber","children","variant","className","onClick","onEdit","handleEditUser","user","renderUserView","defaultActiveKey","id","eventKey","title","disabled","_c","$RefreshReg$"],"sources":["C:/Users/prisc/coffeeshop-react/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Tabs, Tab, Container, Button } from 'react-bootstrap';\r\nimport UserTable from './UserTable'; \r\nimport ProductTable from './ProductTable'; \r\nimport ProductForm from './ProductForm'; \r\n// NOTA: Asumimos que tienes un UserForm.js (o lo crearás)\r\nimport UserForm from './UserForm'; \r\n\r\nconst AdminDashboard = () => {\r\n    // 1. Hook principal: Controla la recarga de las tablas\r\n    const [refreshKey, setRefreshKey] = useState(0); \r\n    const [view, setView] = useState('list'); \r\n    const [productToEdit, setProductToEdit] = useState(null); \r\n    const [userToEdit, setUserToEdit] = useState(null); \r\n\r\n    // Función que incrementa la clave para forzar la recarga de todas las tablas\r\n    const forceRefresh = () => {\r\n        setRefreshKey(prev => prev + 1);\r\n    };\r\n\r\n    // --- MANEJADORES DE ENVÍO DE FORMULARIO ---\r\n    const handleProductSubmit = () => {\r\n        setProductToEdit(null);\r\n        setView('list'); \r\n        forceRefresh(); // << FORZAR RECARGA DESPUÉS DE GUARDAR PRODUCTO\r\n    };\r\n\r\n    const handleUserSubmit = () => {\r\n        setUserToEdit(null);\r\n        setView('list');\r\n        forceRefresh(); // << FORZAR RECARGA DESPUÉS DE GUARDAR USUARIO\r\n    };\r\n    \r\n    // --- MANEJADORES DE VISTA DE PRODUCTO ---\r\n    const handleEditProduct = (product) => {\r\n        setProductToEdit(product);\r\n        setView('product-form'); \r\n    };\r\n\r\n    const renderProductView = () => {\r\n        if (view === 'product-form') {\r\n            return (\r\n                <ProductForm \r\n                    initialData={productToEdit} \r\n                    onSubmit={handleProductSubmit}\r\n                    onCancel={() => setView('list')}\r\n                />\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <Button \r\n                    variant=\"primary\" \r\n                    className=\"my-3\" \r\n                    onClick={() => { setProductToEdit(null); setView('product-form'); }}\r\n                >\r\n                    + Crear Nuevo Producto\r\n                </Button>\r\n                {/* ProductTable RECIBE la clave de recarga */}\r\n                <ProductTable onEdit={handleEditProduct} refreshKey={refreshKey} />\r\n            </>\r\n        );\r\n    };\r\n    \r\n    // --- MANEJADORES DE VISTA DE USUARIO ---\r\n    const handleEditUser = (user) => {\r\n        setUserToEdit(user);\r\n        setView('user-form'); \r\n    };\r\n\r\n    const renderUserView = () => {\r\n        if (view === 'user-form') {\r\n            return (\r\n                <UserForm \r\n                    initialData={userToEdit} \r\n                    onSubmit={handleUserSubmit}\r\n                    onCancel={() => setView('list')}\r\n                />\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <Button \r\n                    variant=\"success\" \r\n                    className=\"my-3\" \r\n                    onClick={() => { setUserToEdit(null); setView('user-form'); }}\r\n                >\r\n                    + Crear Nuevo Usuario\r\n                </Button>\r\n                {/* UserTable RECIBE la clave de recarga */}\r\n                <UserTable onEdit={handleEditUser} refreshKey={refreshKey} />\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5\">\r\n            <h1 className=\"text-center\">Panel de Administración</h1>\r\n\r\n            <Tabs defaultActiveKey=\"usuarios\" id=\"admin-tabs\" className=\"mb-3\">\r\n                \r\n                <Tab eventKey=\"productos\" title=\"Gestión de Productos\">\r\n                    <h3 className=\"mt-3\">Crear, Editar y Listar Productos</h3>\r\n                    {renderProductView()}\r\n                </Tab>\r\n                \r\n                <Tab eventKey=\"usuarios\" title=\"Gestión de Usuarios\">\r\n                    <h3 className=\"mt-3\">Gestión de Clientes y Roles</h3>\r\n                    {renderUserView()}\r\n                </Tab>\r\n\r\n                <Tab eventKey=\"reportes\" title=\"Reportes\" disabled>\r\n                    <p className=\"text-center my-4\">Vista futura.</p>\r\n                </Tab>\r\n            </Tabs>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}